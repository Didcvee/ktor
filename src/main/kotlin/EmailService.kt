package com.example

import java.util.Properties
import javax.mail.*
import javax.mail.internet.InternetAddress
import javax.mail.internet.MimeMessage
import org.jetbrains.exposed.sql.*
import org.jetbrains.exposed.sql.transactions.transaction

object EmailService {
    private const val SMTP_HOST = "smtp.yandex.ru"
    private const val SMTP_PORT = "465"
    private const val SMTP_USER = "perfiljevkiver@yandex.ru"
    private const val SMTP_PASSWORD = "nuuxizcgsssknurl"

    fun sendResetEmail(to: String, code: String) {
        val userName = transaction {
            Users.select { Users.email eq to }
                .mapNotNull { it[Users.name] }
                .firstOrNull() ?: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        }

        val props = Properties().apply {
            put("mail.smtp.host", SMTP_HOST)
            put("mail.smtp.port", SMTP_PORT)
            put("mail.smtp.auth", "true")
            put("mail.smtp.ssl.enable", "true")
        }

        val session = Session.getInstance(props, object : Authenticator() {
            override fun getPasswordAuthentication(): PasswordAuthentication {
                return PasswordAuthentication(SMTP_USER, SMTP_PASSWORD)
            }
        })

        try {
            val message = MimeMessage(session).apply {
                setFrom(InternetAddress(SMTP_USER, "Support Team"))
                setRecipients(Message.RecipientType.TO, InternetAddress.parse(to))
                subject = "üîê –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"

                val htmlContent = """
                    <html>
                        <body style="font-family: Arial, sans-serif; line-height: 1.5; color: #333;">
                            <h2 style="color: #007bff;">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h2>
                            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>$userName</b>,</p>
                            <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è. –í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:</p>
                            <p style="font-size: 24px; font-weight: bold; color: #d9534f; background: #f8d7da; padding: 10px; border-radius: 5px; text-align: center;">
                                $code
                            </p>
                            <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.</p>
                            <hr>
                            <p style="font-size: 12px; color: #888;">–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
                        </body>
                    </html>
                """.trimIndent()

                setContent(htmlContent, "text/html; charset=UTF-8")
            }

            Transport.send(message)
            println("‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ $to —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å SMTP")
        } catch (e: MessagingException) {
            e.printStackTrace()
            println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å: ${e.message}")
        }
    }
}




